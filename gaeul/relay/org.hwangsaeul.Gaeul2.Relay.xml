<?xml version="1.0"?>
<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd" name="/">
  <interface name="org.hwangsaeul.Gaeul2.Relay">
    <!--
      AddSinkToken:
      @username: sink username

      Gives a SRT endpoint identifying itself as @username permission to connect
      to the relay as a sink.
    -->
    <method name="AddSinkToken">
      <arg name="username" type="s" direction="in"/>
    </method>

    <!--
      AddSourceToken:
      @username: source username
      @resource: sink resource identifier

      Gives a SRT endpoint identifying itself as @username permission to connect
      to the relay as a source and request streaming of @resource.
    -->
    <method name="AddSourceToken">
      <arg name="username" type="s" direction="in"/>
      <arg name="resource" type="s" direction="in"/>
    </method>

    <!--
      SetSinkTokenCredentials:
      @username: sink username
      @passphrase: encryption passphrase
      @pbkeylen: key length - 0 (negotiated at connection), 16, 24 or 32.

      Sets encryption passphrase and key length for the given sink token.
    -->
    <method name="SetSinkTokenCredentials">
      <arg name="username" type="s" direction="in"/>
      <arg name="passphrase" type="s" direction="in"/>
      <arg name="pbkeylen" type="u" direction="in"/> 
    </method>

    <!--
      SetSourceTokenCredentials:
      @username: source username
      @resource: sink resource identifier
      @passphrase: encryption passphrase
      @pbkeylen: key length - 0 (negotiated at connection), 16, 24 or 32.

      Sets encryption passphrase and key length for the given source token.
    -->
    <method name="SetSourceTokenCredentials">
      <arg name="username" type="s" direction="in"/>
      <arg name="resource" type="s" direction="in"/>
      <arg name="passphrase" type="s" direction="in"/>
      <arg name="pbkeylen" type="u" direction="in"/> 
    </method>

    <!--
      RemoveSinkToken:
      @username: sink username
      @disconnect: true if any connections matching @username currently in
      progress should get terminated.

      Removes @username from the list of accepted sink tokens. Sink endpoints
      identifying itself with that name will be rejected connection.
    -->
    <method name="RemoveSinkToken">
      <arg name="username" type="s" direction="in"/>
      <arg name="disconnect" type="b" direction="in"/>
    </method>

    <!--
      RemoveSourceToken:
      @username: source username
      @resource: sink resource identifier
      @disconnect: true if any connections matching @username and @resource
      currently in progress should get terminated.

      Rejects @username access to the stream identified as @resource.
    -->
    <method name="RemoveSourceToken">
      <arg name="username" type="s" direction="in"/>
      <arg name="resource" type="s" direction="in"/>
      <arg name="disconnect" type="b" direction="in"/>
    </method>

    <!--
       RerouteSource:
       @from_username: source username to reroute from
       @resource: sink resource to reroute
       @to_username: source username to reroute to

       Removes @from_username / @resource source token and disconnects all
       matching connections while adding a token for @to_username / @resource
       so that @resource starts to be streamed to the new source username once
       a matching caller connects.
    -->
    <method name="RerouteSource">
      <arg name="from_username" type="s" direction="in"/>
      <arg name="resource" type="s" direction="in"/>
      <arg name="to_username" type="s" direction="in"/>
    </method>

    <!--
      ListSinkTokens:
      @tokens: array of sink usernames

      Enumerates sink usernames that are allowed connection with its status.
    -->
    <method name="ListSinkTokens">
      <arg name="tokens" type="a(si)" direction="out"/>
    </method>

    <!--
      ListSourceTokens:
      @tokens: array of pairs of source and sink identifier

      Enumerates source and sink resource identifier with its status.
    -->
    <method name="ListSourceTokens">
      <arg name="tokens" type="a(ssi)" direction="out"/>
    </method>

    <property name="SourceURI" type="s" access="read"/>
    <property name="SinkURI" type="s" access="read"/>
  </interface>

  <interface name="org.hwangsaeul.Gaeul2.Relay.Connection">
    <!--
      GetSocketOption:
      @option: an identifier of a SRT socket option. For values see SRT_SOCKOPT
      enum in libsrt API.
      @value: a returned option value

      Reads an option of the connection's SRT socket.
    -->
    <method name="GetSocketOption">
      <arg name="option" type="u" direction="in"/>
      <arg name="value" type="v" direction="out"/>
    </method>
  </interface>
</node>
